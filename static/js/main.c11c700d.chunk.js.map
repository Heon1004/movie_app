{"version":3,"sources":["componets/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","componets/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","prototype","PropTypes","string","isRequired","number","arrayOf","Home","useState","isLoading","movies","setState","getMovies","a","axios","get","data","useEffect","movie","medium_cover_image","About","Detail","this","props","location","history","undefined","push","React","Component","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAKA,SAASA,EAAT,GAA6D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC9C,OACI,cAAC,IAAD,CACIC,GAAI,CACAC,SAAU,UAAU,CAACP,MACrBQ,MAAO,CAEHP,OACAC,QACAC,UACAC,SACAC,WATZ,SAYI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BP,IAC7B,oBAAIO,UAAU,aAAd,SAA4BR,IAC5B,oBAAIQ,UAAU,eAAd,SAA8BJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACrC,oBAAIL,UAAU,eAAd,SAA0CI,GAARC,QAGtC,mBAAGL,UAAU,gBAAb,SAA8BN,EAAQY,MAAM,EAAG,eAMnEhB,EAAMiB,UAAY,CACdhB,GAAIiB,IAAUC,OAAOC,WACrBlB,KAAMgB,IAAUG,OAAOD,WACvBjB,MAAOe,IAAUC,OAAOC,WACxBhB,QAASc,IAAUC,OAAOC,WAC1Bf,OAAQa,IAAUC,OAAOC,WACzBd,OAAQY,IAAUI,QAAQJ,IAAUC,QAAQC,YAGjCpB,Q,MCYAuB,MAlDf,WACE,MAA0BC,mBAAS,CACjCC,WAAW,EACXC,OAAQ,KAFV,mBAAOjB,EAAP,KAAckB,EAAd,KAOMC,EAAS,uCAAG,8BAAAC,EAAA,sEAONC,IAAMC,IAAI,4DAPJ,gBAKJL,EALI,EAIdM,KACEA,KAAQN,OAIZC,EAAS,CAAED,SAAQD,WAAW,IATd,2CAAH,qDAiBf,OALAQ,qBAAU,WACRL,MACA,IAIA,yBAASlB,UAAU,YAAnB,SACGD,EAAMgB,UACL,qBAAKf,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGD,EAAMiB,OAAOb,KAAI,SAAAqB,GAChB,OAAO,cAAC,EAAD,CAELjC,GAAIiC,EAAMjC,GACVC,KAAMgC,EAAMhC,KACZC,MAAO+B,EAAM/B,MACbC,QAAS8B,EAAM9B,QACfC,OAAQ6B,EAAMC,mBACd7B,OAAQ4B,EAAM5B,QANT4B,EAAMjC,Y,MC9BVmC,MARf,WACI,OACI,qBAAK1B,UAAU,kBAAf,iE,gCCeO2B,E,uKAhBX,WACI,MAA6BC,KAAKC,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACIC,IAAnBF,EAAS/B,OACRgC,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAYF,KAAKC,MAAjBC,SACR,OAAGA,EAAS/B,MACD,+BAAO+B,EAAS/B,MAAMN,QAEtB,S,GAbEyC,IAAMC,W,MCWZC,MATf,WACI,OACI,gCACI,cAAC,IAAD,CAAMvC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCeGwC,MAdf,WAGE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWd,IAChC,cAAC,IAAD,CAAOY,KAAK,aAAaE,UAAWb,QCb1Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c11c700d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <Link\r\n            to={{\r\n                pathname: '/movie/'+{id},\r\n                state: {\r\n                    //year:year === year\r\n                    year,\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }}>\r\n            <div className=\"movie\" >\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie-data\">\r\n                    <h3 className=\"movie-title\">{title}</h3>\r\n                    <h5 className=\"movie-year\">{year}</h5>\r\n                    <ul className=\"movie-genres\">{genres.map((genre, index) => (\r\n                        <li className=\"genres-genre\" key={index}>{genre}</li>\r\n                    ))}\r\n                    </ul>\r\n                    <p className=\"movieosummary\">{summary.slice(0, 140)}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nMovie.prototype = {\r\n    id: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../componets/Movie';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [state, setState] = useState({\r\n    isLoading: true,\r\n    movies: []\r\n  });\r\n\r\n  // async: 非同期という意味 you have to wait for it 발음은 어씽크\r\n  // JavaScriptとgetMovies関数に少し時間が必要って伝え俺らはそれを待つ。\r\n  const getMovies = async () => {\r\n    // await: what do u want me to wait for? => axios\r\n    //axiosの処理が終わるまで待つ\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    //movies:movies를 축약해서movies로 대처가능. ES6 isn't stupit\r\n    setState({ movies, isLoading: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      {state.isLoading ? (\r\n        <div className=\"loader\">\r\n          <span className=\"loader-text\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"movies\">\r\n          {state.movies.map(movie => {\r\n            return <Movie\r\n              key={movie.id}\r\n              id={movie.id}\r\n              year={movie.year}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            />\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n","import React from 'react'\r\nimport \"./About.css\";\r\nfunction About() {\r\n    return (\r\n        <div className=\"about-container\">\r\n            About this page: i built it because I love movies.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        const { location, history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    // 실행순서: render() -> componentDidMount()\r\n    render(){\r\n        const { location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default Detail;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <nav>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n/*\r\n이런식으로 props를 만들어 전달가능\r\n<Link to={{\r\n                pathname: \"/about\",\r\n                state: {\r\n                    fromNavigation: true\r\n                }\r\n            }}\r\n*/","import React from 'react'\n//BrowserRouterはgitPageに細かく設定するのが大変 HashRouter is simple\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./componets/Navigation\";\n\nfunction App() {\n  //path이름이 component와 같을 필요는 없음\n  //Link를 쓰고있다면 Router안에 넣어야함\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n    //id = 변수\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}